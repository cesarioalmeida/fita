<dx:ThemedWindow x:Class="fita.ui.Views.ShellView"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:controls="clr-namespace:fita.ui.Controls"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                 xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
                 xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
                 xmlns:dxwui="http://schemas.devexpress.com/winfx/2008/xaml/windowsui"
                 xmlns:enums="clr-namespace:twentySix.Framework.Core.UI.Enums;assembly=twentySix.Framework.Core"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:navigation="http://schemas.devexpress.com/winfx/2008/xaml/windowsui/navigation"
                 xmlns:viewModels="clr-namespace:fita.ui.ViewModels"
                 Title="fita"
                 Width="1024"
                 Height="768"
                 d:DataContext="{d:DesignInstance viewModels:ShellViewModel}"
                 DataContext="{dxmvvm:ViewModelSource Type=viewModels:ShellViewModel}"
                 Icon="../fita.ico"
                 ShowTitle="False"
                 WindowStartupLocation="CenterOwner"
                 WindowState="Maximized"
                 mc:Ignorable="d"
                 x:Name="this">
    <dx:ThemedWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/fita.ui;component/Themes/Theme.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <dxmvvm:ObjectToObjectConverter x:Key="MessageStateToColourConverter"
                                            DefaultTarget="Black">
                <dxmvvm:MapItem Source="{x:Static enums:NotificationStatusEnum.Error}"
                                Target="Red" />
                <dxmvvm:MapItem Source="{x:Static enums:NotificationStatusEnum.Success}"
                                Target="Green" />
            </dxmvvm:ObjectToObjectConverter>

            <DataTemplate x:Key="waitIndicator">
                <dx:WaitIndicator DeferedVisibility="True" />
            </DataTemplate>

            <Style x:Key="adornerStyle"
                   TargetType="dxwui:PageAdornerControl">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="dxwui:PageAdornerControl">
                            <ContentPresenter />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </dx:ThemedWindow.Resources>

    <dx:ThemedWindow.ToolbarItems>
        <dxb:MainMenuControl VerticalAlignment="Center"
                             ShowBackground="False">
            <dxb:BarSubItem Content="File">
                <dxb:BarButtonItem Content="New" />
                <dxb:BarButtonItem Content="Open" />
                <dxb:BarButtonItem Content="Exit" />
            </dxb:BarSubItem>
            <dxb:BarSubItem Command="{Binding ShowModalViewCommand}"
                            CommandParameter="AccountsView"
                            Content="Accounts" />
            <dxb:BarSubItem Command="{Binding ShowModalViewCommand}"
                            CommandParameter="CategoriesView"
                            Content="Categories" />
            <dxb:BarSubItem Command="{Binding ShowModalViewCommand}"
                            CommandParameter="CurrenciesView"
                            Content="Currencies" />
            <dxb:BarSubItem Command="{Binding ShowModalViewCommand}"
                            CommandParameter="SecuritiesView"
                            Content="Securities" />
            <dxb:BarSubItem Content="Reports" />
        </dxb:MainMenuControl>
    </dx:ThemedWindow.ToolbarItems>

    <dxmvvm:Interaction.Behaviors>
        <dxmvvm:DispatcherService />
        <dx:WindowedDocumentUIService x:Name="ModalWindowDocumentService"
                                      DocumentShowMode="Dialog"
                                      WindowStartupLocation="CenterOwner">
            <dx:WindowedDocumentUIService.WindowStyle>
                <Style TargetType="dx:ThemedWindow">
                    <Setter Property="ShowIcon"
                            Value="False" />
                    <Setter Property="ShowInTaskbar"
                            Value="False" />
                    <Setter Property="ControlBoxButtonSet"
                            Value="MaximizeRestore,Close" />
                    <Setter Property="Width"
                            Value="{Binding Path=Width, FallbackValue=1024}" />
                    <Setter Property="Height"
                            Value="{Binding Path=Height, FallbackValue=600}" />
                </Style>
            </dx:WindowedDocumentUIService.WindowStyle>
        </dx:WindowedDocumentUIService>
        <dxmvvm:EventToCommand Command="{Binding OnViewLoadedCommand}"
                               EventName="Loaded" />
    </dxmvvm:Interaction.Behaviors>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0"
              Margin="5,10,5,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="250"
                                  MinWidth="200"
                                  MaxWidth="400" />
                <ColumnDefinition Width="0" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Border Grid.Column="0"
                    Background="{StaticResource BgStartBrush}">
                <Border.Resources>
                    <Style TargetType="ItemsControl">
                        <Setter Property="ItemTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <controls:ClickableMenuItem />
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style TargetType="controls:ClickableMenuItem">
                        <Setter Property="Command" Value="{Binding Path=DataContext.NavigateCommand, ElementName=this}" />
                        <Setter Property="CommandParameter" Value="{Binding .}" />
                        <Setter Property="Icon" Value="{Binding Icon}" />
                        <Setter Property="LeftCaption" Value="{Binding Caption}" />
                    </Style>
                </Border.Resources>
                <ScrollViewer HorizontalScrollBarVisibility="Auto"
                              VerticalScrollBarVisibility="Auto">
                    <StackPanel Margin="0,5,0,0">
                        <ItemsControl ItemsSource="{Binding HomeHamburgerItem}" />
                        <controls:SeparatorMenuItem />
                        <controls:LabelMenuItem LeftCaption="Banks" />
                        <ItemsControl ItemsSource="{Binding BankHamburgerItems}"/>
                        <controls:SeparatorMenuItem />
                        <controls:LabelMenuItem LeftCaption="Credit Cards" />
                        <ItemsControl ItemsSource="{Binding CreditCardHamburgerItems}" />
                        <controls:SeparatorMenuItem />
                        <controls:LabelMenuItem LeftCaption="Investment" />
                        <ItemsControl ItemsSource="{Binding InvestmentHamburgerItems}" />
                        <controls:SeparatorMenuItem />
                        <controls:LabelMenuItem LeftCaption="Assets" />
                        <ItemsControl ItemsSource="{Binding AssetHamburgerItems}" />
                        <controls:SeparatorMenuItem />
                    </StackPanel>
                </ScrollViewer>
            </Border>

            <GridSplitter Grid.Column="1"
                          HorizontalAlignment="Center"
                          ResizeDirection="Columns" />

            <dxwui:NavigationFrame x:Name="MainNavigationFrame"
                                   Grid.Column="2"
                                   AnimationSpeedRatio="2"
                                   AnimationType="Fade">
                <dxmvvm:Interaction.Behaviors>
                    <navigation:FrameDocumentUIService x:Name="FrameDocumentService"
                                                       PageAdornerControlStyle="{StaticResource adornerStyle}">
                        <navigation:FrameDocumentUIService.SplashScreenService>
                            <dx:DXSplashScreenService SplashScreenStartupLocation="CenterOwner"
                                                      ViewTemplate="{StaticResource waitIndicator}" />
                        </navigation:FrameDocumentUIService.SplashScreenService>
                    </navigation:FrameDocumentUIService>
                </dxmvvm:Interaction.Behaviors>
            </dxwui:NavigationFrame>

        </Grid>

        <dxb:StatusBarControl Grid.Row="1"
                              Caption="Status Bar">
            <dxb:BarStaticItem Content="{Binding Message.Message}"
                               CustomizationContent="Caret Position"
                               Foreground="{Binding Message.Status, Converter={StaticResource MessageStateToColourConverter}}"
                               ShowBorder="False" />
        </dxb:StatusBarControl>
    </Grid>

</dx:ThemedWindow>